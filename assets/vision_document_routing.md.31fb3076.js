import{_ as s,c as a,o as n,U as p}from"./chunks/framework.427dbd49.js";const C=JSON.parse('{"title":"路由","description":"","frontmatter":{},"headers":[],"relativePath":"vision/document/routing.md","lastUpdated":1680774331000}'),l={name:"vision/document/routing.md"},e=p(`<h1 id="路由" tabindex="-1">路由 <a class="header-anchor" href="#路由" aria-label="Permalink to &quot;路由&quot;">​</a></h1><p>本节讲解vitepress中的路由跳转</p><h2 id="页面之间如何跳转" tabindex="-1">页面之间如何跳转 <a class="header-anchor" href="#页面之间如何跳转" aria-label="Permalink to &quot;页面之间如何跳转&quot;">​</a></h2><p>在页面之间跳转时，可以使用绝对路径和相对路径。请注意，虽然.md和.html扩展名都可以工作，但最好的做法是省略文件扩展名，以便VitePress可以根据您的配置生成最终的url。</p><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">Getting Started</span><span style="color:#89DDFF;">](</span><span style="color:#F07178;text-decoration:underline;">./preface</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">Getting Started</span><span style="color:#89DDFF;">](</span><span style="color:#F07178;text-decoration:underline;">../document/quickUse</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p>语法解释：<code>[]</code>内表示文本，<code>()</code>内表示要跳转的页面链接</p><h2 id="路由重写" tabindex="-1">路由重写 <a class="header-anchor" href="#路由重写" aria-label="Permalink to &quot;路由重写&quot;">​</a></h2><p>您可以自定义源目录结构和生成的页面之间的映射。当你有一个复杂的项目结构时，它很有用。例如，假设你有一个带有多个包的<code>monorepo</code>，并且希望像这样将文档与源文件一起放置:</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">.</span></span>
<span class="line"><span style="color:#C3E88D;">├─ packages</span></span>
<span class="line"><span style="color:#C3E88D;">│  ├─ pkg-a</span></span>
<span class="line"><span style="color:#C3E88D;">│  │  └─ src</span></span>
<span class="line"><span style="color:#C3E88D;">│  │      ├─ pkg-a-code.ts</span></span>
<span class="line"><span style="color:#C3E88D;">│  │      └─ pkg-a-docs.md</span></span>
<span class="line"><span style="color:#C3E88D;">│  └─ pkg-b</span></span>
<span class="line"><span style="color:#C3E88D;">│     └─ src</span></span>
<span class="line"><span style="color:#C3E88D;">│         ├─ pkg-b-code.ts</span></span>
<span class="line"><span style="color:#C3E88D;">│         └─ pkg-b-docs.md</span></span>
<span class="line"></span></code></pre></div><p>你想要这样生成<code>VitePress</code>页面:</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C3E88D;">packages/pkg-a/src/pkg-a-docs.md  --&gt;  /pkg-a/index.html</span></span>
<span class="line"><span style="color:#C3E88D;">packages/pkg-b/src/pkg-b-docs.md  --&gt;  /pkg-b/index.html</span></span>
<span class="line"></span></code></pre></div><p>你可以通过在<code>docs/.vitepress/config.js</code>中重写配置选项来实现:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// .vitepress/config.js</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">rewrites</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">packages/pkg-a/src/pkg-a-docs.md</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">pkg-a/index.md</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">packages/pkg-b/src/pkg-b-docs.md</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">pkg-b/index.md</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>重写选项还支持动态路由参数。在上面的例子中，如果您有很多包，那么列出所有的路径就太冗长了。假设它们都有相同的文件结构，你可以这样简化配置:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">rewrites</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">packages/:pkg/src/(.*)</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">:pkg/index.md</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,15),o=[e];function t(c,r,i,D,y,d){return n(),a("div",null,o)}const g=s(l,[["render",t]]);export{C as __pageData,g as default};
